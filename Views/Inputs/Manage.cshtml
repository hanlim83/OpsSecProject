@model OpsSecProject.Models.LogInput
@{
    ViewData["Title"] = "Manage Log Input";
}
@if (!String.IsNullOrEmpty(Convert.ToString(TempData["Alert"])) && TempData["Alert"].Equals("Warning") && !String.IsNullOrEmpty(Convert.ToString(TempData["Message"])))
{
    <div class="form-label-group">
        <div class="alert alert-warning" role="alert">
            @TempData["Message"]
        </div>

    </div>
}
@if (!String.IsNullOrEmpty(Convert.ToString(TempData["Alert"])) && TempData["Alert"].Equals("Danger") && !String.IsNullOrEmpty(Convert.ToString(TempData["Message"])))
{
    <div class="form-label-group">
        <div class="alert alert-danger" role="alert">
            @TempData["Message"]
        </div>

    </div>
}
@if (!String.IsNullOrEmpty(Convert.ToString(TempData["Alert"])) && TempData["Alert"].Equals("Success") && !String.IsNullOrEmpty(Convert.ToString(TempData["Message"])))
{
    <div class="form-label-group">
        <div class="alert alert-success" role="alert">
            @TempData["Message"]
        </div>

    </div>
}
<h1 class="h3 mb-2 text-gray-800">Manage Log Input</h1>
<p class="mb-4"></p>
<div class="container-fluid">
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Summary</h6>
        </div>
        <div class="card-body">
            <form>
                <div class="form-group row">
                    <label asp-for="Name" class="col-sm-4 col-form-label">Log Input Name</label>
                    <div class="col-sm-8">
                        <input asp-for="Name" readonly class="form-control-plaintext" value="@Model.Name">
                    </div>
                </div>
                <div class="form-group row">
                    <label asp-for="LinkedS3Bucket.Name" class="col-sm-4 col-form-label">S3 Bucket</label>
                    <div class="col-sm-8">
                        <input asp-for="LinkedS3Bucket.Name" readonly class="form-control-plaintext" value="@Model.LinkedS3Bucket.Name">
                    </div>
                </div>
                <div class="form-group row">
                    <label asp-for="InitialIngest" class="col-sm-4 col-form-label">Status</label>
                    <div class="col-sm-8">
                        @if (Model.InitialIngest == false)
                        {
                            <input asp-for="InitialIngest" type="text" readonly class="form-control-plaintext" value="Waiting for events">
                        }
                        @if (Model.InitialIngest == true)
                        {
                            <input asp-for="InitialIngest" type="text" readonly class="form-control-plaintext" value="Receiving and Processing Events">
                        }
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Total Event Count</label>
                    <div class="col-sm-8">
                        @if (Model.InitialIngest == false)
                        {
                            <input readonly class="form-control-plaintext" value="0">
                        }
                        @if (Model.InitialIngest == true)
                        {
                            <input readonly class="form-control-plaintext" value="@ViewData["LogInputEventCount"]">
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@section scripts {
    <script>
        function Handler(event) {
            $('#machineLearningTable').DataTable();
        }
        (function () {
            'use strict';
            if (Turbolinks.supported) {
                document.addEventListener('turbolinks:load', Handler, false);
            } else {
                $(document).ready(Handler);
            }
        })();
    </script>
}
@model OpsSecProject.ViewModels.StreamingOverrallViewModel
@{
    ViewData["Title"] = "SSH Logs";
}

<h1 class="h3 mb-2 text-gray-800">SSH Logs Overview</h1>
<p class="mb-4"></p>

<!-- Content Cards -->
<div class="row">

    <!--Cards-->
    <!-- Total Failed Logins -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Total Failed Logins</div>

                        @foreach (var log in Model.cardsFailedLogin)
                        {
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@log.failedLogin</div>
                        }

                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!--User With Most Failed Logins-->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">User With Most Failed Logins</div>

                        @foreach (var log in Model.cardsTopUserFailedLogin)
                        {
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@log.u</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@log.totalNum</div>
                        }

                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Port with most failed login -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Port With Most Failed Logins</div>

                        @foreach (var log in Model.cardsTopPort)
                        {
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@log.topPort</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@log.totalNumPort</div>
                        }

                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Pending Requests Card Example
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Sample2</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">18</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-comments fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>-->
</div>



<!-- Content Charts -->
<div class="row">

    <!-- Donut/Pie Chart -->
    <div class="col-xl-4 col-lg-5">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Overall Login Attempts</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <div class="chart-pie pt-4">
                    <canvas id="LoginAttempts"></canvas>
                </div>
                <hr>
                Details of Total Number of Accepted/Failed Logins.
            </div>
        </div>
    </div>

    <!-- Bar Chart -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Login Attempts Over Month</h6>
        </div>
        <div class="card-body">
            <div class="chart-bar">
                <canvas id="LoginOverTimeBarChart"></canvas>
            </div>
            <hr>
            Details of Login Attempts over the Various Months.
        </div>
    </div>


</div>

<!-- Content Table -->
<div class="
     shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Overall Details</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="sshtable" class="table">
                <thead>
                    <tr>
                        <th scope="col">Weekday</th>
                        <th scope="col">Month</th>
                        <th scope="col">Day</th>
                        <th scope="col">Year</th>
                        <th scope="col">Time</th>
                        <th scope="col">Host</th>
                        <th scope="col">Process</th>
                        <th scope="col">Identifier</th>
                        <th scope="col">Message</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var log in Model.SSHresults)
                    {
                        <tr>
                            <th scope="row">@log.weekday</th>
                            <td>@log.month</td>
                            <td>@log.day</td>
                            <td>@log.year</td>
                            <td>@log.time</td>
                            <td>@log.host</td>
                            <td>@log.process</td>
                            <td>@log.identifier</td>
                            <td>@log.message</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>



@section scripts {
    <script>
        function Handler(event) {
            $('#sshtable').DataTable();

            //Charts Below

            // var data from db for chart
            var xa = @Html.Raw(ViewBag.xAxisJ);
            var ya = @Html.Raw(ViewBag.yAxisJ);

            var xam = @Html.Raw(ViewBag.xAxisM);
            var yam = @Html.Raw(ViewBag.yAxisM);
            var yam2 = @Html.Raw(ViewBag.yAxisM2);

            // Set new default font family and font color to mimic Bootstrap's default styling
            Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
            Chart.defaults.global.defaultFontColor = '#858796';


            // Pie Chart for login attempts
            var ctx = document.getElementById("LoginAttempts");
            var LoginAttempts = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: xa,
                    datasets: [{
                        data: ya,
                        backgroundColor: ['#4e73df', '#36b9cc'],
                        hoverBackgroundColor: ['#2e59d9', '#2c9faf'],
                        hoverBorderColor: "rgba(234, 236, 244, 1)",
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        caretPadding: 10,
                    },
                    legend: {
                        display: true,
                        position: 'bottom'
                    },
                    cutoutPercentage: 80,
                },
            });


            // var data from db for chart


            // Bar Chart login attempts over month
            var ctx = document.getElementById("LoginOverTimeBarChart");
            var LoginOverTimeBarChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: xam,                 
                    datasets: [{
                        label: "Failed",
                        backgroundColor: "#ffd480",
                        hoverBackgroundColor: "#ffcc66",
                        borderColor: "#4e73df",
                        data: yam,

                    },
                    {
                        label: "Accepted",
                        backgroundColor: "#4e73df",
                        hoverBackgroundColor: "#2e59d9",
                        borderColor: "#4e73df",
                        data: yam2,
                    }



                    ],

                },

                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            top: 25,
                            bottom: 0
                        }
                    },
                    scales: {
                        xAxes: [{
                            time: {
                                unit: 'logins'
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                            ticks: {
                                maxTicksLimit: 6
                            },
                            maxBarThickness: 25,
                        }],
                        yAxes: [{
                            ticks: {
                                min: 0,
                                max: 5000,
                                maxTicksLimit: 5,
                                padding: 100,

                                callback: function (value, index, values) {
                                    return number_format(value);
                                }
                            },
                            gridLines: {
                                color: "rgb(234, 236, 244)",
                                zeroLineColor: "rgb(234, 236, 244)",
                                drawBorder: false,
                                borderDash: [2],
                                zeroLineBorderDash: [2]
                            }
                        }],
                    },
                    legend: {
                        display: true,
                        position: 'bottom'
                    },
                    tooltips: {
                        titleMarginBottom: 10,
                        titleFontColor: '#6e707e',
                        titleFontSize: 14,
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        caretPadding: 10,
                        callbacks: {
                            label: function (tooltipItem, chart) {
                                var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
                            }
                        }
                    },
                }

            });


        }
        (function () {
            'use strict';
            if (Turbolinks.supported) {
                document.addEventListener('turbolinks:load', Handler, false);
            } else {
                $(document).ready(Handler);
            }
        })();
    </script>
}


@model OpsSecProject.Models.RealmDiscoveryModel;
@{
    Layout = "_ExternalLayout";
    ViewData["Title"] = "Welcome";
}
<form class="form-signin needs-validation" asp-action="RealmDiscovery" novalidate>
    <div class="text-center mb-4">
        <h1 class="h3 mb-3 font-weight-normal">Welcome!</h1>
        <p>Please enter your username to continue</p>
    </div>
    @if (!String.IsNullOrEmpty(Convert.ToString(ViewData["Alert"])) && ViewData["Alert"].Equals("Warning") && !String.IsNullOrEmpty(Convert.ToString(ViewData["Message"])))
    {
        <div class="form-group">
            <div class="alert alert-warning" role="alert">
                @ViewData["Message"]
            </div>

        </div>
    }
    @if (!String.IsNullOrEmpty(Convert.ToString(ViewData["Alert"])) && ViewData["Alert"].Equals("Danger") && !String.IsNullOrEmpty(Convert.ToString(ViewData["Message"])))
    {
        <div class="form-group">
            <div class="alert alert-danger" role="alert">
                @ViewData["Message"]
            </div>

        </div>
    }
    @if (!String.IsNullOrEmpty(Convert.ToString(TempData["State"])) && TempData["State"].Equals("PasswordResetEmail"))
    {
        <div class="form-group">
            <div class="alert alert-success" role="alert">
                An email has been sent to your email address. Please follow the instructions to reset your password
            </div>
        </div>
    }
    @if (!String.IsNullOrEmpty(Convert.ToString(TempData["State"])) && TempData["State"].Equals("PasswordResetPhone"))
    {
        <div class="form-group">
            <div class="alert alert-success" role="alert">
                A SMS has been sent to your phone. Please follow the instructions to reset your password
            </div>
        </div>
    }
    @if (!String.IsNullOrEmpty(Convert.ToString(TempData["State"])) && TempData["State"].Equals("2FAEmail"))
    {
        <div class="form-group">
            <div class="alert alert-success" role="alert">
                An email has been sent to your email address. Please follow the instructions to login
            </div>
        </div>
    }
    @if (!String.IsNullOrEmpty(Convert.ToString(TempData["State"])) && TempData["State"].Equals("UserNotFound"))
    {
        <div class="form-group">
            <div class="alert alert-danger" role="alert">
                No such user! Please try again
            </div>
        </div>
    }
    <div class="form-group">
        @if (!String.IsNullOrEmpty(Convert.ToString(ViewData["ReturnURL"])))
        {
            <input asp-for="ReturnUrl" type="hidden" value="@ViewData["ReturnURL"]" />
        }
        @if (String.IsNullOrEmpty(Convert.ToString(ViewData["ReturnURL"])))
        {
            <input asp-for="ReturnUrl" type="hidden" />
        }
    </div>
    <div class="form-group">
        <input asp-for="Username" class="form-control form-control-user" placeholder="Username" required />
        <div class="invalid-feedback">
            Please enter your username
        </div>
    </div>
    <div id="recap"></div>
    <button class="btn btn-lg btn-primary btn-block g-recaptcha" data-sitekey="@System.Environment.GetEnvironmentVariable("RECAPTCHAV2_SITE_KEY")" data-callback='reCaptchaCallback' type="submit" id="formBtnSubmit">Continue</button>
    <div class="text-center mb-4">
        <hr>
        @if (!String.IsNullOrEmpty(Convert.ToString(ViewData["ReturnURL"])))
        {
            <a class="small" asp-action="Login" asp-route-ReturnUrl="@ViewData["ReturnURL"]">Skip Realm Discovery</a>
        }
        @if (String.IsNullOrEmpty(Convert.ToString(ViewData["ReturnURL"])))
        {
            <a class="small" asp-action="Login">Skip Realm Discovery</a>
        }
    </div>
    <p class="mt-5 mb-3 text-muted">&copy; 2020 - SmartInsights</p>
</form>
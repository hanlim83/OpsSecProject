@model OpsSecProject.Models.UserDataManagementViewModel
@{
    ViewData["Title"] = "Edit User";
}
<h1 class="h3 mb-2 text-gray-800">Manage Users</h1>
<p class="mb-4"></p>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Edit User: @Model.user.Name</h6>
    </div>
    <div class="card-body">
        @if (!String.IsNullOrEmpty(Convert.ToString(ViewData["Alert"])) && ViewData["Alert"].Equals("Warning") && !String.IsNullOrEmpty(Convert.ToString(ViewData["Message"])))
        {
            <div class="form-label-group">
                <div class="alert alert-warning" role="alert">
                    @ViewData["Message"]
                </div>

            </div>
        }
        @if (!String.IsNullOrEmpty(Convert.ToString(ViewData["Alert"])) && ViewData["Alert"].Equals("Danger") && !String.IsNullOrEmpty(Convert.ToString(ViewData["Message"])))
        {
            <div class="form-label-group">
                <div class="alert alert-danger" role="alert">
                    @ViewData["Message"]
                </div>

            </div>
        }
        @if (!String.IsNullOrEmpty(Convert.ToString(ViewData["Alert"])) && ViewData["Alert"].Equals("Success") && !String.IsNullOrEmpty(Convert.ToString(ViewData["Message"])))
        {
            <div class="form-label-group">
                <div class="alert alert-success" role="alert">
                    @ViewData["Message"]
                </div>

            </div>
        }
    <form class="needs-validation" novalidate asp-action="EditUser">
        @if (Model.user.Existence != Existence.Internal)
        {
            <div class="form-group row">
                <label asp-for="Username" class="col-sm-4 col-form-label">Username</label>
                <div class="col-sm-8">
                    <input asp-for="Username" readonly class="form-control-plaintext" value="@Model.user.Username">
                </div>
            </div>
            <div class="form-group row">
                <label asp-for="Name" class="col-sm-4 col-form-label">User's Name</label>
                <div class="col-sm-8">
                    <input asp-for="Name" readonly class="form-control-plaintext" value="@Model.user.Name">
                </div>
            </div>
            <div class="form-group row">
                <label asp-for="Role" class="col-sm-4 col-form-label">User's Role</label>
                <div class="col-sm-8">
                    @if (Model.user.LinkedRole != null)
                    {
                        <input asp-for="Role" value="@Model.user.LinkedRole.RoleName" readonly class="form-control-plaintext">
                    }
                    @if (Model.user.LinkedRole == null)
                    {
                        <input asp-for="Role" value="User" readonly class="form-control-plaintext">
                    }
                </div>
            </div>
        }
        @if (Model.user.Existence == Existence.Internal)
        {
            <div class="form-group">
                <label asp-for="Username">Assigned Username</label>
                <input asp-for="Username" class="form-control" value="@Model.user.Username" required>
                <div class="invalid-feedback">
                    Please enter a username
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Name">User's Name</label>
                <input asp-for="Name" value="@Model.user.Name" class="form-control" required>
                <div class="invalid-feedback">
                    Please enter the user's name
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Role">User's Role</label>
                <select class="custom-select" asp-for="Role" required>
                    @if (Model.user.LinkedRole == null)
                    {
                        <option selected value="User">User</option>
                        @foreach (var role in Model.allRoles)
                        {
                            <option value="@role.RoleName">@role.RoleName</option>
                        }
                    }
                    @if (Model.user.LinkedRole != null)
                    {
                        <option value="User">User</option>
                        @foreach (var role in Model.allRoles)
                        {
                            @if (Model.user.LinkedRole.RoleName.Equals(role.RoleName))
                            {
                                <option selected value="@role.RoleName">@role.RoleName</option>
                            }
                            @if (!Model.user.LinkedRole.RoleName.Equals(role.RoleName))
                            {
                                <option value="@role.RoleName">@role.RoleName</option>
                            }
                        }
                    }
                </select>
                <div class="invalid-feedback">
                    Please select the user's role
                </div>
            </div>
        }
        @if (Model.user.OverridableField == OverridableField.EmailAddress || Model.user.OverridableField == OverridableField.Both)
        {
            <div class="form-group">
                <label asp-for="EmailAddress">User's Email Address</label>
                <input asp-for="EmailAddress" value="@Model.user.EmailAddress" class="form-control">
                <div class="invalid-feedback">
                    Please enter a vaild email address
                </div>
            </div>
        }
        @if (Model.user.OverridableField == OverridableField.PhoneNumber || Model.user.OverridableField == OverridableField.None)
        {
            <div class="form-group row">
                <label asp-for="EmailAddress" class="col-sm-4 col-form-label">User's Email Address</label>
                <div class="col-sm-8">
                    <input asp-for="EmailAddress" readonly class="form-control-plaintext" value="@Model.user.EmailAddress">
                </div>
            </div>
        }
        @if (Model.user.OverridableField == OverridableField.PhoneNumber || Model.user.OverridableField == OverridableField.Both)
        {
            <div class="form-group">
                <label asp-for="PhoneNumber">User's Phone Number</label>
                <input asp-for="PhoneNumber" value="@Model.user.PhoneNumber" class="form-control" pattern="[0-9]{8}">
                <div class="invalid-feedback">
                    Please enter a vaild phone number
                </div>
            </div>
        }
        @if (Model.user.OverridableField == OverridableField.EmailAddress || Model.user.OverridableField == OverridableField.None)
        {
            <div class="form-group row">
                <label asp-for="PhoneNumber" class="col-sm-4 col-form-label">User's Phone Number</label>
                <div class="col-sm-8">
                    <input asp-for="PhoneNumber" readonly class="form-control-plaintext" value="@Model.user.PhoneNumber">
                </div>
            </div>
        }
        <div class="form-group row">
            <label asp-for="user.Existence" class="col-sm-4 col-form-label">Authentication Realm</label>
            <div class="col-sm-8">
                <input asp-for="user.Existence" readonly class="form-control-plaintext" value="@Model.user.Existence.ToString()">
            </div>
        </div>
        @if (Model.user.Existence != Existence.Internal)
        {
            <div class="form-group row">
                <label asp-for="user.IDPReference" class="col-sm-4 col-form-label">External Identity Provider Reference</label>
                <div class="col-sm-8">
                    <input asp-for="user.IDPReference" readonly class="form-control-plaintext" value="@Model.user.IDPReference">
                </div>
            </div>
        }
        <button type="submit" id="formBtnSubmit" class="btn btn-primary">Modify User</button>
    </form>
    </div>
</div>